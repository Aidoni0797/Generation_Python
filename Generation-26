Generation-26

Сравнение None с другими типами данных

Сравнение None с любым объектом, отличным от None, дает значение False.

Следующий программный код:
print(None == None)
выведет:
True

Следующий программный код:
print(None==17)
print(None==3.14)
print(None==True)
print(None==[1,2,3])
print(None=='Beegeek')

выведет:
False
False
False
False
False

Важно понимать, что следующий программный код:
print(None==0)
print(None==False)
print(None=='')

выведет:
False
False
False

Значение None не отождествляется со значениями 0, False, ''.

Сравнивать None с другими типами данных можно только на равенство.

Следующий программный код:
print(None>0)
print(None<=False)

приводит к ошибке:

TypeError: '>' not supported between instances of 'NoneTpe' and 'int' ('bool')

Примечания
Примечание 1. Обратите внимание, что функции, не возвращающие значений, на самом деле, в Python возвращают значение None:

def print_message():
  print('I - iDONi,')
  print('good person.')

Мы можем вызвать функцию print_message() так:
print_message()
или так:
res = print_message()
В переменной res хранится значение None.

Примечание 2. Концепция null значений появилась при создании языка ALGOL W великим Чарльзом Хоаром, который позднее назвал собственную идею ошибкой на миллиард долларов.
Чарльз Хоар - автор одного из самых быстрых алгоритмов сортировки, основанной на сравнениях: быстрая сортировка QuickSort.
